{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\REHA\\\\showsnmovies\\\\src\\\\components\\\\TVShows.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { TVShowsContext } from '../contexts/TVShowsContext';\nimport { SearchContext } from '../contexts/SearchContext';\nimport '../css/items.css';\n\nconst TVShows = ({\n  modalVisible,\n  handleModalVisibility\n}) => {\n  _s();\n\n  const {\n    topTVShows,\n    filteredTVShows,\n    showTopTVShows,\n    getFilteredTVShows\n  } = useContext(TVShowsContext);\n  const {\n    term,\n    setCurrentPath\n  } = useContext(SearchContext);\n  useEffect(() => {\n    if (term != '') getFilteredTVShows(term);\n    setCurrentPath('/tvshows');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"items-container\",\n    children: showTopTVShows ? topTVShows.map(tvShow => {\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"item\",\n        onClick: () => handleModalVisibility(!modalVisible),\n        to: {\n          pathname: '/tvshows/details/' + tvShow.id,\n          state: {\n            tvShow: tvShow\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://image.tmdb.org/t/p/w500\" + tvShow.poster_path,\n            alt: \"Image not found...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 64\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-title-wrapper\",\n          children: tvShow.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 33\n        }, this)]\n      }, tvShow.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 29\n      }, this);\n    }) : filteredTVShows.map(tvShow => {\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"item\",\n        onClick: () => handleModalVisibility(!modalVisible),\n        to: {\n          pathname: '/tvshows/details/' + tvShow.id,\n          state: {\n            tvShow: tvShow\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://image.tmdb.org/t/p/w500\" + tvShow.poster_path,\n            alt: \"Image not found...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-title-wrapper\",\n          children: tvShow.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 37\n        }, this)]\n      }, tvShow.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 33\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TVShows, \"3YLNJPau657sETaEJOH14HxgJLM=\");\n\n_c = TVShows;\nexport default TVShows;\n\nvar _c;\n\n$RefreshReg$(_c, \"TVShows\");","map":{"version":3,"sources":["D:/REHA/showsnmovies/src/components/TVShows.js"],"names":["React","useState","useEffect","useContext","NavLink","TVShowsContext","SearchContext","TVShows","modalVisible","handleModalVisibility","topTVShows","filteredTVShows","showTopTVShows","getFilteredTVShows","term","setCurrentPath","map","tvShow","pathname","id","state","poster_path","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAO,kBAAP;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAA6C;AAAA;;AACzD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,eAAd;AAA+BC,IAAAA,cAA/B;AAA+CC,IAAAA;AAA/C,MAAsEV,UAAU,CAACE,cAAD,CAAtF;AACA,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA2BZ,UAAU,CAACG,aAAD,CAA3C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,IAAI,IAAI,EAAZ,EAAgBD,kBAAkB,CAACC,IAAD,CAAlB;AAChBC,IAAAA,cAAc,CAAC,UAAD,CAAd;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cAEQH,cAAc,GACVF,UAAU,CAACM,GAAX,CAAeC,MAAM,IAAI;AACrB,0BACI,QAAC,OAAD;AAAyB,QAAA,SAAS,EAAC,MAAnC;AAA0C,QAAA,OAAO,EAAE,MAAMR,qBAAqB,CAAC,CAACD,YAAF,CAA9E;AAA+F,QAAA,EAAE,EAAE;AAAEU,UAAAA,QAAQ,EAAE,sBAAsBD,MAAM,CAACE,EAAzC;AAA6CC,UAAAA,KAAK,EAAE;AAAEH,YAAAA,MAAM,EAAEA;AAAV;AAApD,SAAnG;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCAA+B;AAAK,YAAA,GAAG,EAAE,oCAAoCA,MAAM,CAACI,WAArD;AAAkE,YAAA,GAAG,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBAAqCJ,MAAM,CAACK;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAcL,MAAM,CAACE,EAArB;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARD,CADU,GAWNR,eAAe,CAACK,GAAhB,CAAoBC,MAAM,IAAI;AAC1B,0BACI,QAAC,OAAD;AAAyB,QAAA,SAAS,EAAC,MAAnC;AAA0C,QAAA,OAAO,EAAE,MAAMR,qBAAqB,CAAC,CAACD,YAAF,CAA9E;AAA+F,QAAA,EAAE,EAAE;AAAEU,UAAAA,QAAQ,EAAE,sBAAsBD,MAAM,CAACE,EAAzC;AAA6CC,UAAAA,KAAK,EAAE;AAAEH,YAAAA,MAAM,EAAEA;AAAV;AAApD,SAAnG;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCAA+B;AAAK,YAAA,GAAG,EAAE,oCAAoCA,MAAM,CAACI,WAArD;AAAkE,YAAA,GAAG,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBAAqCJ,MAAM,CAACK;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAcL,MAAM,CAACE,EAArB;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPD;AAbhB;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CAnCD;;GAAMZ,O;;KAAAA,O;AAqCN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { TVShowsContext } from '../contexts/TVShowsContext';\r\nimport { SearchContext } from '../contexts/SearchContext';\r\nimport '../css/items.css';\r\n\r\nconst TVShows = ({ modalVisible, handleModalVisibility }) => {\r\n    const { topTVShows, filteredTVShows, showTopTVShows, getFilteredTVShows } = useContext(TVShowsContext);\r\n    const { term, setCurrentPath } = useContext(SearchContext);\r\n\r\n    useEffect(() => {\r\n        if (term != '') getFilteredTVShows(term);\r\n        setCurrentPath('/tvshows');\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"items-container\">\r\n            {\r\n                showTopTVShows ? (\r\n                    topTVShows.map(tvShow => {\r\n                        return (\r\n                            <NavLink key={tvShow.id} className=\"item\" onClick={() => handleModalVisibility(!modalVisible)} to={{ pathname: '/tvshows/details/' + tvShow.id, state: { tvShow: tvShow } }}>\r\n                                <div className=\"image-wrapper\"><img src={\"https://image.tmdb.org/t/p/w500\" + tvShow.poster_path} alt=\"Image not found...\"></img></div>\r\n                                <div className=\"item-title-wrapper\">{tvShow.name}</div>\r\n                            </NavLink>\r\n\r\n                        )\r\n                    })\r\n                ) : (\r\n                        filteredTVShows.map(tvShow => {\r\n                            return (\r\n                                <NavLink key={tvShow.id} className=\"item\" onClick={() => handleModalVisibility(!modalVisible)} to={{ pathname: '/tvshows/details/' + tvShow.id, state: { tvShow: tvShow } }}>\r\n                                    <div className=\"image-wrapper\"><img src={\"https://image.tmdb.org/t/p/w500\" + tvShow.poster_path} alt=\"Image not found...\"></img></div>\r\n                                    <div className=\"item-title-wrapper\">{tvShow.name}</div>\r\n                                </NavLink>\r\n                            )\r\n                        })\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TVShows;"]},"metadata":{},"sourceType":"module"}