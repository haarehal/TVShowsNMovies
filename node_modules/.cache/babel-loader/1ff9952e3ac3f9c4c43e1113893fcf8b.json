{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Haris\\\\Desktop\\\\showsnmovies\\\\src\\\\contexts\\\\MoviesContext.js\";\nimport React, { createContext, Component } from 'react';\nexport const MoviesContext = /*#__PURE__*/createContext();\n\nclass MoviesContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      topMovies: [],\n      filteredMovies: [],\n      showTopMovies: true\n    };\n\n    this.getTopMovies = async () => {\n      let response = await fetch('https://api.themoviedb.org/3/movie/top_rated?api_key=041d9cd3501933c52b6696c13f0d60a7', {\n        method: 'GET'\n      });\n      response = await response.json();\n      const movies = response.results.slice(0, 10);\n      this.setState({\n        topMovies: movies\n      });\n    };\n\n    this.getFilteredMovies = async query => {\n      let response = await fetch('https://api.themoviedb.org/3/search/movie?api_key=041d9cd3501933c52b6696c13f0d60a7&query=' + query, {\n        method: 'GET'\n      });\n      response = await response.json();\n      const movies = response.results;\n      this.setState({\n        filteredMovies: movies,\n        showTopMovies: false\n      });\n    };\n\n    this.changeMoviesAppereance = isTrue => {\n      this.setState({\n        showTopMovies: isTrue\n      });\n    };\n\n    this.setFilteredMovies = movies => {\n      this.setState({\n        filteredMovies: movies\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getTopMovies();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(MoviesContext.Provider, {\n      value: { ...this.state,\n        getTopMovies: this.getTopMovies,\n        getFilteredMovies: this.getFilteredMovies,\n        changeMoviesAppereance: this.changeMoviesAppereance,\n        setFilteredMovies: this.setFilteredMovies\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default MoviesContextProvider;","map":{"version":3,"sources":["C:/Users/Haris/Desktop/showsnmovies/src/contexts/MoviesContext.js"],"names":["React","createContext","Component","MoviesContext","MoviesContextProvider","state","topMovies","filteredMovies","showTopMovies","getTopMovies","response","fetch","method","json","movies","results","slice","setState","getFilteredMovies","query","changeMoviesAppereance","isTrue","setFilteredMovies","componentDidMount","render","props","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AAEA,OAAO,MAAMC,aAAa,gBAAGF,aAAa,EAAnC;;AAEP,MAAMG,qBAAN,SAAoCF,SAApC,CAA8C;AAAA;AAAA;AAAA,SAC3CG,KAD2C,GACnC;AACLC,MAAAA,SAAS,EAAE,EADN;AAELC,MAAAA,cAAc,EAAE,EAFX;AAGLC,MAAAA,aAAa,EAAE;AAHV,KADmC;;AAAA,SAO3CC,YAP2C,GAO5B,YAAY;AACxB,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CACvB,uFADuB,EAEvB;AACGC,QAAAA,MAAM,EAAE;AADX,OAFuB,CAA1B;AAMAF,MAAAA,QAAQ,GAAG,MAAMA,QAAQ,CAACG,IAAT,EAAjB;AAEA,YAAMC,MAAM,GAAGJ,QAAQ,CAACK,OAAT,CAAiBC,KAAjB,CAAuB,CAAvB,EAA0B,EAA1B,CAAf;AAEA,WAAKC,QAAL,CAAc;AACXX,QAAAA,SAAS,EAAEQ;AADA,OAAd;AAGF,KArB0C;;AAAA,SAuB3CI,iBAvB2C,GAuBvB,MAAOC,KAAP,IAAiB;AAClC,UAAIT,QAAQ,GAAG,MAAMC,KAAK,CACvB,8FACGQ,KAFoB,EAGvB;AACGP,QAAAA,MAAM,EAAE;AADX,OAHuB,CAA1B;AAOAF,MAAAA,QAAQ,GAAG,MAAMA,QAAQ,CAACG,IAAT,EAAjB;AAEA,YAAMC,MAAM,GAAGJ,QAAQ,CAACK,OAAxB;AAEA,WAAKE,QAAL,CAAc;AACXV,QAAAA,cAAc,EAAEO,MADL;AAEXN,QAAAA,aAAa,EAAE;AAFJ,OAAd;AAIF,KAvC0C;;AAAA,SAyC3CY,sBAzC2C,GAyCjBC,MAAD,IAAY;AAClC,WAAKJ,QAAL,CAAc;AACXT,QAAAA,aAAa,EAAEa;AADJ,OAAd;AAGF,KA7C0C;;AAAA,SA+C3CC,iBA/C2C,GA+CtBR,MAAD,IAAY;AAC7B,WAAKG,QAAL,CAAc;AACXV,QAAAA,cAAc,EAAEO;AADL,OAAd;AAGF,KAnD0C;AAAA;;AAqD3CS,EAAAA,iBAAiB,GAAG;AACjB,SAAKd,YAAL;AACF;;AAEDe,EAAAA,MAAM,GAAG;AACN,wBACG,QAAC,aAAD,CAAe,QAAf;AACG,MAAA,KAAK,EAAE,EACJ,GAAG,KAAKnB,KADJ;AAEJI,QAAAA,YAAY,EAAE,KAAKA,YAFf;AAGJS,QAAAA,iBAAiB,EAAE,KAAKA,iBAHpB;AAIJE,QAAAA,sBAAsB,EAAE,KAAKA,sBAJzB;AAKJE,QAAAA,iBAAiB,EAAE,KAAKA;AALpB,OADV;AAAA,gBASI,KAAKG,KAAL,CAAWC;AATf;AAAA;AAAA;AAAA;AAAA,YADH;AAaF;;AAvE0C;;AA0E9C,eAAetB,qBAAf","sourcesContent":["import React, { createContext, Component } from 'react';\r\n\r\nexport const MoviesContext = createContext();\r\n\r\nclass MoviesContextProvider extends Component {\r\n   state = {\r\n      topMovies: [],\r\n      filteredMovies: [],\r\n      showTopMovies: true,\r\n   };\r\n\r\n   getTopMovies = async () => {\r\n      let response = await fetch(\r\n         'https://api.themoviedb.org/3/movie/top_rated?api_key=041d9cd3501933c52b6696c13f0d60a7',\r\n         {\r\n            method: 'GET',\r\n         }\r\n      );\r\n      response = await response.json();\r\n\r\n      const movies = response.results.slice(0, 10);\r\n\r\n      this.setState({\r\n         topMovies: movies,\r\n      });\r\n   };\r\n\r\n   getFilteredMovies = async (query) => {\r\n      let response = await fetch(\r\n         'https://api.themoviedb.org/3/search/movie?api_key=041d9cd3501933c52b6696c13f0d60a7&query=' +\r\n            query,\r\n         {\r\n            method: 'GET',\r\n         }\r\n      );\r\n      response = await response.json();\r\n\r\n      const movies = response.results;\r\n\r\n      this.setState({\r\n         filteredMovies: movies,\r\n         showTopMovies: false,\r\n      });\r\n   };\r\n\r\n   changeMoviesAppereance = (isTrue) => {\r\n      this.setState({\r\n         showTopMovies: isTrue,\r\n      });\r\n   };\r\n\r\n   setFilteredMovies = (movies) => {\r\n      this.setState({\r\n         filteredMovies: movies,\r\n      });\r\n   };\r\n\r\n   componentDidMount() {\r\n      this.getTopMovies();\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <MoviesContext.Provider\r\n            value={{\r\n               ...this.state,\r\n               getTopMovies: this.getTopMovies,\r\n               getFilteredMovies: this.getFilteredMovies,\r\n               changeMoviesAppereance: this.changeMoviesAppereance,\r\n               setFilteredMovies: this.setFilteredMovies\r\n            }}\r\n         >\r\n            {this.props.children}\r\n         </MoviesContext.Provider>\r\n      );\r\n   }\r\n}\r\n\r\nexport default MoviesContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}