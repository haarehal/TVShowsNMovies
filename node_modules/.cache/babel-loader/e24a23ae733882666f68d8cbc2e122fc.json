{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Haris\\\\Desktop\\\\React app\\\\showsnmovies\\\\src\\\\components\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { SearchContext } from '../contexts/SearchContext';\nimport { MoviesContext } from '../contexts/MoviesContext';\n\nconst SearchBar = () => {\n  _s();\n\n  const {\n    term,\n    setTerm\n  } = useContext(SearchContext);\n  const {\n    filteredMovies,\n    getFilteredMovies,\n    showTopMovies,\n    changeMoviesAppereance,\n    setFilteredMovies\n  } = useContext(MoviesContext);\n\n  const handleInputChange = e => {\n    setTerm(e.target.value);\n  };\n\n  useEffect(() => {\n    if (term.length >= 3) {\n      const timeout = setTimeout(() => {\n        let query = term.split(\" \");\n        query = query.filter(q => q !== \"\");\n\n        if (query.length > 1) {\n          query = query.toString();\n          query = query.replace(new RegExp(\"\\\\,\", \"g\"), '+');\n        }\n\n        getFilteredMovies(query);\n      }, 3000);\n      return () => clearTimeout(timeout);\n    } else {\n      setFilteredMovies([]);\n      changeMoviesAppereance();\n    }\n  }, [term]);\n  useEffect(() => {\n    changeMoviesAppereance();\n  }, [filteredMovies]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Search bar!\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: term,\n      onChange: handleInputChange,\n      placeholder: \"Search by name...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"gxlDfXwEqMkrcaJgTTj0AUh7cb0=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/Haris/Desktop/React app/showsnmovies/src/components/SearchBar.js"],"names":["React","useEffect","useState","useContext","SearchContext","MoviesContext","SearchBar","term","setTerm","filteredMovies","getFilteredMovies","showTopMovies","changeMoviesAppereance","setFilteredMovies","handleInputChange","e","target","value","length","timeout","setTimeout","query","split","filter","q","toString","replace","RegExp","clearTimeout"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,aAAT,QAA8B,2BAA9B;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBL,UAAU,CAACC,aAAD,CAApC;AACA,QAAM;AAAEK,IAAAA,cAAF;AAAkBC,IAAAA,iBAAlB;AAAqCC,IAAAA,aAArC;AAAoDC,IAAAA,sBAApD;AAA4EC,IAAAA;AAA5E,MAAkGV,UAAU,CAACE,aAAD,CAAlH;;AAEA,QAAMS,iBAAiB,GAAIC,CAAD,IAAO;AAC7BP,IAAAA,OAAO,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAFD;;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,IAAI,CAACW,MAAL,IAAe,CAAnB,EAAsB;AAClB,YAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC7B,YAAIC,KAAK,GAAGd,IAAI,CAACe,KAAL,CAAW,GAAX,CAAZ;AACAD,QAAAA,KAAK,GAAGA,KAAK,CAACE,MAAN,CAAaC,CAAC,IAAIA,CAAC,KAAK,EAAxB,CAAR;;AAEA,YAAIH,KAAK,CAACH,MAAN,GAAe,CAAnB,EAAsB;AAClBG,UAAAA,KAAK,GAAGA,KAAK,CAACI,QAAN,EAAR;AACAJ,UAAAA,KAAK,GAAGA,KAAK,CAACK,OAAN,CAAc,IAAIC,MAAJ,CAAW,KAAX,EAAkB,GAAlB,CAAd,EAAsC,GAAtC,CAAR;AACH;;AAEDjB,QAAAA,iBAAiB,CAACW,KAAD,CAAjB;AACH,OAVyB,EAUvB,IAVuB,CAA1B;AAYA,aAAO,MAAMO,YAAY,CAACT,OAAD,CAAzB;AACH,KAdD,MAeK;AACDN,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAD,MAAAA,sBAAsB;AACzB;AACJ,GApBQ,EAoBN,CAACL,IAAD,CApBM,CAAT;AAsBAN,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,sBAAsB;AACzB,GAFQ,EAEN,CAACH,cAAD,CAFM,CAAT;AAIA,sBACI;AAAA,2CAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEF,IAA1B;AAAgC,MAAA,QAAQ,EAAEO,iBAA1C;AAA6D,MAAA,WAAW,EAAC;AAAzE;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAxCD;;GAAMR,S;;KAAAA,S;AA0CN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { SearchContext } from '../contexts/SearchContext';\r\nimport { MoviesContext } from '../contexts/MoviesContext';\r\n\r\nconst SearchBar = () => {\r\n    const { term, setTerm } = useContext(SearchContext);\r\n    const { filteredMovies, getFilteredMovies, showTopMovies, changeMoviesAppereance, setFilteredMovies } = useContext(MoviesContext);\r\n\r\n    const handleInputChange = (e) => {\r\n        setTerm(e.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (term.length >= 3) {\r\n            const timeout = setTimeout(() => {\r\n                let query = term.split(\" \");\r\n                query = query.filter(q => q !== \"\");\r\n\r\n                if (query.length > 1) {\r\n                    query = query.toString();\r\n                    query = query.replace(new RegExp(\"\\\\,\", \"g\"), '+');\r\n                }\r\n\r\n                getFilteredMovies(query);\r\n            }, 3000);\r\n\r\n            return () => clearTimeout(timeout);\r\n        }\r\n        else {\r\n            setFilteredMovies([]);\r\n            changeMoviesAppereance();\r\n        }\r\n    }, [term]);\r\n\r\n    useEffect(() => {\r\n        changeMoviesAppereance();\r\n    }, [filteredMovies]);\r\n\r\n    return (\r\n        <div>\r\n            Search bar!\r\n            <input type=\"text\" value={term} onChange={handleInputChange} placeholder=\"Search by name...\"></input>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}