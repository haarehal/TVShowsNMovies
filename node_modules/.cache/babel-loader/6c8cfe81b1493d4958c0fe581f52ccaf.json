{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Haris\\\\Desktop\\\\React app\\\\showsnmovies\\\\src\\\\components\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { SearchContext } from '../contexts/SearchContext';\nimport { MoviesContext } from '../contexts/MoviesContext';\nimport { TVShowsContext } from '../contexts/TVShowsContext';\nimport { withRouter } from 'react-router-dom';\n\nconst SearchBar = props => {\n  _s();\n\n  const {\n    term,\n    setTerm\n  } = useContext(SearchContext);\n  const {\n    filteredMovies,\n    getFilteredMovies,\n    showTopMovies,\n    changeMoviesAppereance,\n    setFilteredMovies\n  } = useContext(MoviesContext);\n  const {\n    getFilteredTVShows,\n    changeTVShowsAppereance\n  } = useContext(TVShowsContext);\n  const [path, setPath] = useState(props.location.pathname);\n\n  const handleInputChange = e => {\n    setTerm(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(\"OK!\");\n    setPath(props.location.pathname);\n  });\n  useEffect(() => {\n    if (term.length >= 3) {\n      const timeout = setTimeout(() => {\n        /* let query = term.split(\" \");\r\n        query = query.filter(q => q !== \"\");\r\n          if (query.length > 1) {\r\n            query = query.toString();\r\n            query = query.replace(new RegExp(\"\\\\,\", \"g\"), '+');\r\n        } */\n        if (path === '/movies') getFilteredMovies(term);else getFilteredTVShows(term);\n      }, 1000);\n      return () => clearTimeout(timeout);\n    } else {\n      if (path === '/movies') changeMoviesAppereance(true);else changeTVShowsAppereance(true);\n    }\n  }, [term]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Search bar!\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: term,\n      onChange: handleInputChange,\n      placeholder: \"Search by name...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"cfFOGS98G/fpUBBf1TcA8KC50Jk=\");\n\n_c = SearchBar;\nexport default _c2 = withRouter(SearchBar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchBar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Haris/Desktop/React app/showsnmovies/src/components/SearchBar.js"],"names":["React","useEffect","useState","useContext","SearchContext","MoviesContext","TVShowsContext","withRouter","SearchBar","props","term","setTerm","filteredMovies","getFilteredMovies","showTopMovies","changeMoviesAppereance","setFilteredMovies","getFilteredTVShows","changeTVShowsAppereance","path","setPath","location","pathname","handleInputChange","e","target","value","console","log","length","timeout","setTimeout","clearTimeout"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBR,UAAU,CAACC,aAAD,CAApC;AACA,QAAM;AAAEQ,IAAAA,cAAF;AAAkBC,IAAAA,iBAAlB;AAAqCC,IAAAA,aAArC;AAAoDC,IAAAA,sBAApD;AAA4EC,IAAAA;AAA5E,MAAkGb,UAAU,CAACE,aAAD,CAAlH;AACA,QAAM;AAAEY,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,MAAkDf,UAAU,CAACG,cAAD,CAAlE;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAACO,KAAK,CAACY,QAAN,CAAeC,QAAhB,CAAhC;;AAEA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC7Bb,IAAAA,OAAO,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAFD;;AAIAzB,EAAAA,SAAS,CAAC,MAAM;AAAE0B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACdR,IAAAA,OAAO,CAACX,KAAK,CAACY,QAAN,CAAeC,QAAhB,CAAP;AACH,GAFQ,CAAT;AAIArB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,IAAI,CAACmB,MAAL,IAAe,CAAnB,EAAsB;AAClB,YAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC7B;AAChB;AACA;AACA;AACA;AACA;AAGgB,YAAGZ,IAAI,KAAK,SAAZ,EAAuBN,iBAAiB,CAACH,IAAD,CAAjB,CAAvB,KACKO,kBAAkB,CAACP,IAAD,CAAlB;AACR,OAXyB,EAWvB,IAXuB,CAA1B;AAaA,aAAO,MAAMsB,YAAY,CAACF,OAAD,CAAzB;AACH,KAfD,MAgBK;AACD,UAAGX,IAAI,KAAK,SAAZ,EAAuBJ,sBAAsB,CAAC,IAAD,CAAtB,CAAvB,KACKG,uBAAuB,CAAC,IAAD,CAAvB;AACR;AACJ,GArBQ,EAqBN,CAACR,IAAD,CArBM,CAAT;AAuBA,sBACI;AAAA,2CAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEA,IAA1B;AAAgC,MAAA,QAAQ,EAAEa,iBAA1C;AAA6D,MAAA,WAAW,EAAC;AAAzE;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA3CD;;GAAMf,S;;KAAAA,S;AA6CN,qBAAeD,UAAU,CAACC,SAAD,CAAzB","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { SearchContext } from '../contexts/SearchContext';\r\nimport { MoviesContext } from '../contexts/MoviesContext';\r\nimport { TVShowsContext } from '../contexts/TVShowsContext';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst SearchBar = (props) => {\r\n    const { term, setTerm } = useContext(SearchContext);\r\n    const { filteredMovies, getFilteredMovies, showTopMovies, changeMoviesAppereance, setFilteredMovies } = useContext(MoviesContext);\r\n    const { getFilteredTVShows, changeTVShowsAppereance } = useContext(TVShowsContext);\r\n    const [path, setPath] = useState(props.location.pathname);\r\n\r\n    const handleInputChange = (e) => {\r\n        setTerm(e.target.value);\r\n    }\r\n\r\n    useEffect(() => { console.log(\"OK!\");\r\n        setPath(props.location.pathname);\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (term.length >= 3) {\r\n            const timeout = setTimeout(() => {\r\n                /* let query = term.split(\" \");\r\n                query = query.filter(q => q !== \"\");\r\n\r\n                if (query.length > 1) {\r\n                    query = query.toString();\r\n                    query = query.replace(new RegExp(\"\\\\,\", \"g\"), '+');\r\n                } */\r\n                \r\n                if(path === '/movies') getFilteredMovies(term);\r\n                else getFilteredTVShows(term);\r\n            }, 1000);\r\n\r\n            return () => clearTimeout(timeout);\r\n        }\r\n        else {\r\n            if(path === '/movies') changeMoviesAppereance(true);\r\n            else changeTVShowsAppereance(true);\r\n        }\r\n    }, [term]);\r\n\r\n    return (\r\n        <div>\r\n            Search bar!\r\n            <input type=\"text\" value={term} onChange={handleInputChange} placeholder=\"Search by name...\"></input>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(SearchBar);"]},"metadata":{},"sourceType":"module"}