{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Haris\\\\Desktop\\\\React app\\\\showsnmovies\\\\src\\\\components\\\\Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { MoviesContext } from '../contexts/MoviesContext';\nimport { SearchContext } from '../contexts/SearchContext';\nimport '../css/items.css';\n\nconst Movies = ({\n  modalVisible,\n  handleModalVisibility\n}) => {\n  _s();\n\n  const {\n    topMovies,\n    filteredMovies,\n    showTopMovies,\n    getFilteredMovies\n  } = useContext(MoviesContext);\n  const {\n    term,\n    setCurrentPath\n  } = useContext(SearchContext);\n  useEffect(() => {\n    if (term != '') getFilteredMovies(term);\n    setCurrentPath('/movies');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"items-container\",\n    children: showTopMovies ? topMovies.map(movie => {\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"item\",\n        onClick: () => handleModalVisibility(!modalVisible),\n        to: {\n          pathname: '/movies/details/' + movie.id,\n          state: {\n            movie: movie\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://image.tmdb.org/t/p/w500\" + movie.poster_path,\n            alt: \"Image not found...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 64\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-title-wrapper\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 33\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 29\n      }, this);\n    }) : filteredMovies.map(movie => {\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"item\",\n        onClick: () => handleModalVisibility(!modalVisible),\n        to: {\n          pathname: '/movies/details/' + movie.id,\n          state: {\n            movie: movie\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://image.tmdb.org/t/p/w500\" + movie.poster_path,\n            alt: \"Cover photo...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-title-wrapper\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 37\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Movies, \"K/DNpULCnrEpecFd1lN6fDTh8D8=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["C:/Users/Haris/Desktop/React app/showsnmovies/src/components/Movies.js"],"names":["React","useState","useEffect","useContext","NavLink","MoviesContext","SearchContext","Movies","modalVisible","handleModalVisibility","topMovies","filteredMovies","showTopMovies","getFilteredMovies","term","setCurrentPath","map","movie","pathname","id","state","poster_path","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAO,kBAAP;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAA6C;AAAA;;AACxD,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,cAAb;AAA6BC,IAAAA,aAA7B;AAA4CC,IAAAA;AAA5C,MAAkEV,UAAU,CAACE,aAAD,CAAlF;AACA,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA2BZ,UAAU,CAACG,aAAD,CAA3C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,IAAI,IAAI,EAAZ,EAAgBD,iBAAiB,CAACC,IAAD,CAAjB;AAChBC,IAAAA,cAAc,CAAC,SAAD,CAAd;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cAEQH,aAAa,GACTF,SAAS,CAACM,GAAV,CAAcC,KAAK,IAAI;AACnB,0BACI,QAAC,OAAD;AAAwB,QAAA,SAAS,EAAC,MAAlC;AAAyC,QAAA,OAAO,EAAE,MAAMR,qBAAqB,CAAC,CAACD,YAAF,CAA7E;AAA8F,QAAA,EAAE,EAAE;AAAEU,UAAAA,QAAQ,EAAE,qBAAqBD,KAAK,CAACE,EAAvC;AAA2CC,UAAAA,KAAK,EAAE;AAAEH,YAAAA,KAAK,EAAEA;AAAT;AAAlD,SAAlG;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCAA+B;AAAK,YAAA,GAAG,EAAE,oCAAoCA,KAAK,CAACI,WAApD;AAAiE,YAAA,GAAG,EAAC;AAArE;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBAAqCJ,KAAK,CAACK;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAcL,KAAK,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPD,CADS,GAULR,cAAc,CAACK,GAAf,CAAmBC,KAAK,IAAI;AACxB,0BACI,QAAC,OAAD;AAAwB,QAAA,SAAS,EAAC,MAAlC;AAAyC,QAAA,OAAO,EAAE,MAAMR,qBAAqB,CAAC,CAACD,YAAF,CAA7E;AAA8F,QAAA,EAAE,EAAE;AAAEU,UAAAA,QAAQ,EAAE,qBAAqBD,KAAK,CAACE,EAAvC;AAA2CC,UAAAA,KAAK,EAAE;AAAEH,YAAAA,KAAK,EAAEA;AAAT;AAAlD,SAAlG;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCAA+B;AAAK,YAAA,GAAG,EAAE,oCAAoCA,KAAK,CAACI,WAApD;AAAiE,YAAA,GAAG,EAAC;AAArE;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBAAqCJ,KAAK,CAACK;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAcL,KAAK,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPD;AAZhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAlCD;;GAAMZ,M;;KAAAA,M;AAoCN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { MoviesContext } from '../contexts/MoviesContext';\r\nimport { SearchContext } from '../contexts/SearchContext';\r\nimport '../css/items.css'\r\n\r\nconst Movies = ({ modalVisible, handleModalVisibility }) => {\r\n    const { topMovies, filteredMovies, showTopMovies, getFilteredMovies } = useContext(MoviesContext);\r\n    const { term, setCurrentPath } = useContext(SearchContext);\r\n\r\n    useEffect(() => {\r\n        if (term != '') getFilteredMovies(term);\r\n        setCurrentPath('/movies');\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"items-container\">\r\n            {\r\n                showTopMovies ? (\r\n                    topMovies.map(movie => {\r\n                        return (\r\n                            <NavLink key={movie.id} className=\"item\" onClick={() => handleModalVisibility(!modalVisible)} to={{ pathname: '/movies/details/' + movie.id, state: { movie: movie } }}>\r\n                                <div className=\"image-wrapper\"><img src={\"https://image.tmdb.org/t/p/w500\" + movie.poster_path} alt=\"Image not found...\" /></div>\r\n                                <div className=\"item-title-wrapper\">{movie.title}</div>\r\n                            </NavLink>\r\n                        )\r\n                    })\r\n                ) : (\r\n                        filteredMovies.map(movie => {\r\n                            return (\r\n                                <NavLink key={movie.id} className=\"item\" onClick={() => handleModalVisibility(!modalVisible)} to={{ pathname: '/movies/details/' + movie.id, state: { movie: movie } }}>\r\n                                    <div className=\"image-wrapper\"><img src={\"https://image.tmdb.org/t/p/w500\" + movie.poster_path} alt=\"Cover photo...\"></img></div>\r\n                                    <div className=\"item-title-wrapper\">{movie.title}</div>\r\n                                </NavLink>\r\n                            )\r\n                        })\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies;"]},"metadata":{},"sourceType":"module"}