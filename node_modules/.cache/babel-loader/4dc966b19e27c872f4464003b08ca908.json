{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Haris\\\\Desktop\\\\showsnmovies\\\\src\\\\components\\\\Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { MoviesContext } from '../contexts/MoviesContext';\nimport { SearchContext } from '../contexts/SearchContext';\nimport '../css/items.css';\n\nconst Movies = ({\n  modalVisible,\n  handleModalVisibility\n}) => {\n  _s();\n\n  const [videos, setVideo] = useState([]);\n  const {\n    topMovies,\n    filteredMovies,\n    showTopMovies,\n    getFilteredMovies\n  } = useContext(MoviesContext);\n  const {\n    term,\n    setCurrentPath\n  } = useContext(SearchContext);\n  useEffect(() => {\n    if (term !== '') getFilteredMovies(term);\n    setCurrentPath('/movies');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"items-container\",\n    children: showTopMovies ? topMovies.map(movie => {\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"item\",\n        onClick: () => handleModalVisibility(!modalVisible),\n        to: {\n          pathname: '/movies/details/' + movie.id,\n          state: {\n            movie: movie\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: 'https://image.tmdb.org/t/p/w500' + movie.poster_path,\n            alt: \"Not found...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-title-wrapper\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 24\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this);\n    }) : filteredMovies.map(movie => {\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"item\",\n        onClick: () => handleModalVisibility(!modalVisible),\n        to: {\n          pathname: '/movies/details/' + movie.id,\n          state: {\n            movie: movie\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: 'https://image.tmdb.org/t/p/w500' + movie.poster_path,\n            alt: \"Not found...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-title-wrapper\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 24\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Movies, \"3jqAEPoyvtc6TkSJ0vWocNtEwpk=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["C:/Users/Haris/Desktop/showsnmovies/src/components/Movies.js"],"names":["React","useState","useEffect","useContext","NavLink","MoviesContext","SearchContext","Movies","modalVisible","handleModalVisibility","videos","setVideo","topMovies","filteredMovies","showTopMovies","getFilteredMovies","term","setCurrentPath","map","movie","pathname","id","state","poster_path","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAO,kBAAP;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAA6C;AAAA;;AACzD,QAAM,CAACC,MAAD,EAASC,QAAT,IAAqBV,QAAQ,CAAC,EAAD,CAAnC;AAEA,QAAM;AACHW,IAAAA,SADG;AAEHC,IAAAA,cAFG;AAGHC,IAAAA,aAHG;AAIHC,IAAAA;AAJG,MAKFZ,UAAU,CAACE,aAAD,CALd;AAMA,QAAM;AAAEW,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA2Bd,UAAU,CAACG,aAAD,CAA3C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACb,QAAIc,IAAI,KAAK,EAAb,EAAiBD,iBAAiB,CAACC,IAAD,CAAjB;AACjBC,IAAAA,cAAc,CAAC,SAAD,CAAd;AACF,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACG;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACIH,aAAa,GACTF,SAAS,CAACM,GAAV,CAAeC,KAAD,IAAW;AACtB,0BACG,QAAC,OAAD;AAEG,QAAA,SAAS,EAAC,MAFb;AAGG,QAAA,OAAO,EAAE,MAAMV,qBAAqB,CAAC,CAACD,YAAF,CAHvC;AAIG,QAAA,EAAE,EAAE;AACDY,UAAAA,QAAQ,EAAE,qBAAqBD,KAAK,CAACE,EADpC;AAEDC,UAAAA,KAAK,EAAE;AAAEH,YAAAA,KAAK,EAAEA;AAAT;AAFN,SAJP;AAAA,gCASG;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACG;AACG,YAAA,GAAG,EACA,oCACAA,KAAK,CAACI,WAHZ;AAKG,YAAA,GAAG,EAAC;AALP;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,gBATH,eAkBG;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBAAqCJ,KAAK,CAACK;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAlBH;AAAA,SACQL,KAAK,CAACE,EADd;AAAA;AAAA;AAAA;AAAA,cADH;AAsBF,KAvBD,CADS,GAyBTR,cAAc,CAACK,GAAf,CAAoBC,KAAD,IAAW;AAC3B,0BACG,QAAC,OAAD;AAEG,QAAA,SAAS,EAAC,MAFb;AAGG,QAAA,OAAO,EAAE,MAAMV,qBAAqB,CAAC,CAACD,YAAF,CAHvC;AAIG,QAAA,EAAE,EAAE;AACDY,UAAAA,QAAQ,EAAE,qBAAqBD,KAAK,CAACE,EADpC;AAEDC,UAAAA,KAAK,EAAE;AAAEH,YAAAA,KAAK,EAAEA;AAAT;AAFN,SAJP;AAAA,gCASG;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACG;AACG,YAAA,GAAG,EACA,oCACAA,KAAK,CAACI,WAHZ;AAKG,YAAA,GAAG,EAAC;AALP;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,gBATH,eAkBG;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBAAqCJ,KAAK,CAACK;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAlBH;AAAA,SACQL,KAAK,CAACE,EADd;AAAA;AAAA;AAAA;AAAA,cADH;AAsBF,KAvBD;AA1BR;AAAA;AAAA;AAAA;AAAA,UADH;AAqDF,CArED;;GAAMd,M;;KAAAA,M;AAuEN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { MoviesContext } from '../contexts/MoviesContext';\r\nimport { SearchContext } from '../contexts/SearchContext';\r\nimport '../css/items.css';\r\n\r\nconst Movies = ({ modalVisible, handleModalVisibility }) => {\r\n   const [videos, setVideo] = useState([]);\r\n\r\n   const {\r\n      topMovies,\r\n      filteredMovies,\r\n      showTopMovies,\r\n      getFilteredMovies,\r\n   } = useContext(MoviesContext);\r\n   const { term, setCurrentPath } = useContext(SearchContext);\r\n\r\n   useEffect(() => {\r\n      if (term !== '') getFilteredMovies(term);\r\n      setCurrentPath('/movies');\r\n   }, []);\r\n\r\n   return (\r\n      <div className='items-container'>\r\n         {showTopMovies\r\n            ? topMovies.map((movie) => {\r\n                 return (\r\n                    <NavLink\r\n                       key={movie.id}\r\n                       className='item'\r\n                       onClick={() => handleModalVisibility(!modalVisible)}\r\n                       to={{\r\n                          pathname: '/movies/details/' + movie.id,\r\n                          state: { movie: movie },\r\n                       }}\r\n                    >\r\n                       <div className='image-wrapper'>\r\n                          <img\r\n                             src={\r\n                                'https://image.tmdb.org/t/p/w500' +\r\n                                movie.poster_path\r\n                             }\r\n                             alt='Not found...'\r\n                          />\r\n                       </div>\r\n                       <div className='item-title-wrapper'>{movie.title}</div>\r\n                    </NavLink>\r\n                 );\r\n              })\r\n            : filteredMovies.map((movie) => {\r\n                 return (\r\n                    <NavLink\r\n                       key={movie.id}\r\n                       className='item'\r\n                       onClick={() => handleModalVisibility(!modalVisible)}\r\n                       to={{\r\n                          pathname: '/movies/details/' + movie.id,\r\n                          state: { movie: movie },\r\n                       }}\r\n                    >\r\n                       <div className='image-wrapper'>\r\n                          <img\r\n                             src={\r\n                                'https://image.tmdb.org/t/p/w500' +\r\n                                movie.poster_path\r\n                             }\r\n                             alt='Not found...'\r\n                          ></img>\r\n                       </div>\r\n                       <div className='item-title-wrapper'>{movie.title}</div>\r\n                    </NavLink>\r\n                 );\r\n              })}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}