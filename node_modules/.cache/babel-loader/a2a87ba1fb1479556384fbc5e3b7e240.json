{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Haris\\\\Desktop\\\\showsnmovies\\\\src\\\\contexts\\\\MoviesContext.js\";\nimport React, { createContext, Component } from 'react';\nexport const MoviesContext = /*#__PURE__*/createContext();\n\nclass MoviesContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      topMovies: [],\n      filteredMovies: [],\n      showTopMovies: true\n    };\n\n    this.getTopMovies = async () => {\n      let response = await fetch(\"https://api.themoviedb.org/3/movie/top_rated?api_key=041d9cd3501933c52b6696c13f0d60a7\", {\n        method: \"GET\"\n      });\n      response = await response.json();\n      const movies = response.results.slice(0, 10);\n      this.setState({\n        topMovies: movies\n      });\n    };\n\n    this.getFilteredMovies = async query => {\n      let response = await fetch(\"https://api.themoviedb.org/3/search/movie?api_key=041d9cd3501933c52b6696c13f0d60a7&query=\" + query, {\n        method: \"GET\"\n      });\n      response = await response.json();\n      const movies = response.results;\n      this.setState({\n        filteredMovies: movies,\n        showTopMovies: false\n      });\n    };\n\n    this.changeMoviesAppereance = isTrue => {\n      this.setState({\n        showTopMovies: isTrue\n      });\n    };\n\n    this.setFilteredMovies = movies => {\n      this.setState({\n        filteredMovies: movies\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getTopMovies();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(MoviesContext.Provider, {\n      value: { ...this.state,\n        getTopMovies: this.getTopMovies,\n        getFilteredMovies: this.getFilteredMovies,\n        changeMoviesAppereance: this.changeMoviesAppereance,\n        setFilteredMovies: this.setFilteredMovies\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MoviesContextProvider;","map":{"version":3,"sources":["C:/Users/Haris/Desktop/showsnmovies/src/contexts/MoviesContext.js"],"names":["React","createContext","Component","MoviesContext","MoviesContextProvider","state","topMovies","filteredMovies","showTopMovies","getTopMovies","response","fetch","method","json","movies","results","slice","setState","getFilteredMovies","query","changeMoviesAppereance","isTrue","setFilteredMovies","componentDidMount","render","props","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AAEA,OAAO,MAAMC,aAAa,gBAAGF,aAAa,EAAnC;;AAEP,MAAMG,qBAAN,SAAoCF,SAApC,CAA8C;AAAA;AAAA;AAAA,SAC1CG,KAD0C,GAClC;AACJC,MAAAA,SAAS,EAAE,EADP;AAEJC,MAAAA,cAAc,EAAE,EAFZ;AAGJC,MAAAA,aAAa,EAAE;AAHX,KADkC;;AAAA,SAO1CC,YAP0C,GAO3B,YAAY;AACvB,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uFAAD,EAA0F;AAChHC,QAAAA,MAAM,EAAE;AADwG,OAA1F,CAA1B;AAGAF,MAAAA,QAAQ,GAAG,MAAMA,QAAQ,CAACG,IAAT,EAAjB;AAEA,YAAMC,MAAM,GAAGJ,QAAQ,CAACK,OAAT,CAAiBC,KAAjB,CAAuB,CAAvB,EAA0B,EAA1B,CAAf;AAEA,WAAKC,QAAL,CAAc;AACVX,QAAAA,SAAS,EAAEQ;AADD,OAAd;AAGH,KAlByC;;AAAA,SAoB1CI,iBApB0C,GAoBtB,MAAOC,KAAP,IAAiB;AACjC,UAAIT,QAAQ,GAAG,MAAMC,KAAK,CAAC,8FAA8FQ,KAA/F,EAAsG;AAC5HP,QAAAA,MAAM,EAAE;AADoH,OAAtG,CAA1B;AAGAF,MAAAA,QAAQ,GAAG,MAAMA,QAAQ,CAACG,IAAT,EAAjB;AAEA,YAAMC,MAAM,GAAGJ,QAAQ,CAACK,OAAxB;AAEA,WAAKE,QAAL,CAAc;AACVV,QAAAA,cAAc,EAAEO,MADN;AAEVN,QAAAA,aAAa,EAAE;AAFL,OAAd;AAIH,KAhCyC;;AAAA,SAkC1CY,sBAlC0C,GAkChBC,MAAD,IAAY;AACjC,WAAKJ,QAAL,CAAc;AACVT,QAAAA,aAAa,EAAEa;AADL,OAAd;AAGH,KAtCyC;;AAAA,SAwC1CC,iBAxC0C,GAwCrBR,MAAD,IAAY;AAC5B,WAAKG,QAAL,CAAc;AACVV,QAAAA,cAAc,EAAEO;AADN,OAAd;AAGH,KA5CyC;AAAA;;AA8C1CS,EAAAA,iBAAiB,GAAG;AAChB,SAAKd,YAAL;AACH;;AAEDe,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,aAAD,CAAe,QAAf;AAAwB,MAAA,KAAK,EAAE,EAC3B,GAAG,KAAKnB,KADmB;AAE3BI,QAAAA,YAAY,EAAE,KAAKA,YAFQ;AAG3BS,QAAAA,iBAAiB,EAAE,KAAKA,iBAHG;AAI3BE,QAAAA,sBAAsB,EAAE,KAAKA,sBAJF;AAK3BE,QAAAA,iBAAiB,EAAE,KAAKA;AALG,OAA/B;AAAA,gBAOK,KAAKG,KAAL,CAAWC;AAPhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA9DyC;;AAiE9C,eAAetB,qBAAf","sourcesContent":["import React, { createContext, Component } from 'react';\r\n\r\nexport const MoviesContext = createContext();\r\n\r\nclass MoviesContextProvider extends Component {\r\n    state = {\r\n        topMovies: [],\r\n        filteredMovies: [],\r\n        showTopMovies: true\r\n    }\r\n\r\n    getTopMovies = async () => {\r\n        let response = await fetch(\"https://api.themoviedb.org/3/movie/top_rated?api_key=041d9cd3501933c52b6696c13f0d60a7\", {\r\n            method: \"GET\",\r\n        });\r\n        response = await response.json();\r\n\r\n        const movies = response.results.slice(0, 10);\r\n\r\n        this.setState({\r\n            topMovies: movies\r\n        });\r\n    }\r\n\r\n    getFilteredMovies = async (query) => {\r\n        let response = await fetch(\"https://api.themoviedb.org/3/search/movie?api_key=041d9cd3501933c52b6696c13f0d60a7&query=\" + query, {\r\n            method: \"GET\",\r\n        });\r\n        response = await response.json();\r\n\r\n        const movies = response.results;\r\n\r\n        this.setState({\r\n            filteredMovies: movies,\r\n            showTopMovies: false\r\n        });\r\n    }\r\n\r\n    changeMoviesAppereance = (isTrue) => {\r\n        this.setState({\r\n            showTopMovies: isTrue\r\n        });\r\n    }\r\n\r\n    setFilteredMovies = (movies) => {\r\n        this.setState({\r\n            filteredMovies: movies\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTopMovies();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MoviesContext.Provider value={{\r\n                ...this.state,\r\n                getTopMovies: this.getTopMovies,\r\n                getFilteredMovies: this.getFilteredMovies,\r\n                changeMoviesAppereance: this.changeMoviesAppereance,\r\n                setFilteredMovies: this.setFilteredMovies\r\n            }}>\r\n                {this.props.children}\r\n            </MoviesContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MoviesContextProvider;"]},"metadata":{},"sourceType":"module"}