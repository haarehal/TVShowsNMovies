{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Haris\\\\Desktop\\\\React app\\\\showsnmovies\\\\src\\\\components\\\\TVShows.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { TVShowsContext } from '../contexts/TVShowsContext';\nimport { SearchContext } from '../contexts/SearchContext';\n\nconst TVShows = ({\n  modalVisible,\n  handleModalVisibility\n}) => {\n  _s();\n\n  const {\n    topTVShows,\n    filteredTVShows,\n    showTopTVShows,\n    getFilteredTVShows\n  } = useContext(TVShowsContext);\n  const {\n    term,\n    setCurrentPath\n  } = useContext(SearchContext);\n  useEffect(() => {\n    if (term != '') getFilteredTVShows(term);\n    setCurrentPath('/tvshows');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"TV SHOWS COMPONENT!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: showTopTVShows ? topTVShows.map(tvShow => {\n          return /*#__PURE__*/_jsxDEV(NavLink, {\n            className: \"item\",\n            onClick: () => handleModalVisibility(!modalVisible),\n            to: {\n              pathname: '/tvshows/details/' + tvShow.id,\n              state: {\n                tvShow: tvShow\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://image.tmdb.org/t/p/w500\" + movie.poster_path,\n                alt: \"Cover photo...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 64\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-title-wrapper\",\n              children: tvShow.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 33\n          }, this);\n        }) : filteredTVShows.map(tvShow => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              onClick: () => handleModalVisibility(!modalVisible),\n              to: {\n                pathname: '/tvshows/details/' + tvShow.id,\n                state: {\n                  tvShow: tvShow\n                }\n              },\n              children: tvShow.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }, this)\n          }, tvShow.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TVShows, \"3YLNJPau657sETaEJOH14HxgJLM=\");\n\n_c = TVShows;\nexport default TVShows;\n\nvar _c;\n\n$RefreshReg$(_c, \"TVShows\");","map":{"version":3,"sources":["C:/Users/Haris/Desktop/React app/showsnmovies/src/components/TVShows.js"],"names":["React","useState","useEffect","useContext","NavLink","TVShowsContext","SearchContext","TVShows","modalVisible","handleModalVisibility","topTVShows","filteredTVShows","showTopTVShows","getFilteredTVShows","term","setCurrentPath","map","tvShow","pathname","id","state","movie","poster_path","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,aAAT,QAA8B,2BAA9B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAA6C;AAAA;;AACzD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,eAAd;AAA+BC,IAAAA,cAA/B;AAA+CC,IAAAA;AAA/C,MAAsEV,UAAU,CAACE,cAAD,CAAtF;AACA,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA2BZ,UAAU,CAACG,aAAD,CAA3C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGY,IAAI,IAAI,EAAX,EAAeD,kBAAkB,CAACC,IAAD,CAAlB;AACfC,IAAAA,cAAc,CAAC,UAAD,CAAd;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACI;AAAA,kBAEQH,cAAc,GACdF,UAAU,CAACM,GAAX,CAAeC,MAAM,IAAI;AACrB,8BACI,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC,MAAnB;AAA0B,YAAA,OAAO,EAAE,MAAMR,qBAAqB,CAAC,CAACD,YAAF,CAA9D;AAA+E,YAAA,EAAE,EAAE;AAAEU,cAAAA,QAAQ,EAAE,sBAAsBD,MAAM,CAACE,EAAzC;AAA6CC,cAAAA,KAAK,EAAE;AAAEH,gBAAAA,MAAM,EAAEA;AAAV;AAApD,aAAnF;AAAA,oCACA;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,qCAA+B;AAAK,gBAAA,GAAG,EAAE,oCAAoCI,KAAK,CAACC,WAApD;AAAiE,gBAAA,GAAG,EAAC;AAArE;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA,wBAAqCL,MAAM,CAACM;AAA5C;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH,SARD,CADc,GAWVZ,eAAe,CAACK,GAAhB,CAAoBC,MAAM,IAAI;AAC9B,8BACI;AAAA,mCACI,QAAC,OAAD;AAAS,cAAA,OAAO,EAAE,MAAMR,qBAAqB,CAAC,CAACD,YAAF,CAA7C;AAA8D,cAAA,EAAE,EAAE;AAAEU,gBAAAA,QAAQ,EAAE,sBAAsBD,MAAM,CAACE,EAAzC;AAA6CC,gBAAAA,KAAK,EAAE;AAAEH,kBAAAA,MAAM,EAAEA;AAAV;AAApD,eAAlE;AAAA,wBAA6IA,MAAM,CAACM;AAApJ;AAAA;AAAA;AAAA;AAAA;AADJ,aAASN,MAAM,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SANG;AAbZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAvCD;;GAAMZ,O;;KAAAA,O;AAyCN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { TVShowsContext } from '../contexts/TVShowsContext';\r\nimport { SearchContext } from '../contexts/SearchContext';\r\n\r\nconst TVShows = ({ modalVisible, handleModalVisibility }) => {\r\n    const { topTVShows, filteredTVShows, showTopTVShows, getFilteredTVShows } = useContext(TVShowsContext);\r\n    const { term, setCurrentPath } = useContext(SearchContext);\r\n\r\n    useEffect(() => {\r\n        if(term != '') getFilteredTVShows(term);\r\n        setCurrentPath('/tvshows');\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <p>TV SHOWS COMPONENT!</p>\r\n            <div>\r\n                <ul>\r\n                    {\r\n                        showTopTVShows ? (\r\n                        topTVShows.map(tvShow => {\r\n                            return (\r\n                                <NavLink className=\"item\" onClick={() => handleModalVisibility(!modalVisible)} to={{ pathname: '/tvshows/details/' + tvShow.id, state: { tvShow: tvShow } }}>\r\n                                <div className=\"image-wrapper\"><img src={\"https://image.tmdb.org/t/p/w500\" + movie.poster_path} alt=\"Cover photo...\"></img></div>\r\n                                <div className=\"item-title-wrapper\">{tvShow.name}</div>\r\n                            </NavLink>\r\n                                \r\n                            )\r\n                        })\r\n                        ) : (\r\n                            filteredTVShows.map(tvShow => {\r\n                            return (\r\n                                <li key={tvShow.id}>\r\n                                    <NavLink onClick={() => handleModalVisibility(!modalVisible)} to={{ pathname: '/tvshows/details/' + tvShow.id, state: { tvShow: tvShow } }}>{tvShow.name}</NavLink>\r\n                                </li>\r\n                            )\r\n                        })\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TVShows;"]},"metadata":{},"sourceType":"module"}