{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Haris\\\\Desktop\\\\showsnmovies\\\\src\\\\components\\\\TVShows.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { TVShowsContext } from '../contexts/TVShowsContext';\nimport { SearchContext } from '../contexts/SearchContext';\nimport '../css/items.css';\n\nconst TVShows = ({\n  modalVisible,\n  handleModalVisibility\n}) => {\n  _s();\n\n  const {\n    topTVShows,\n    filteredTVShows,\n    showTopTVShows,\n    getFilteredTVShows\n  } = useContext(TVShowsContext);\n  const {\n    term,\n    setCurrentPath\n  } = useContext(SearchContext);\n  useEffect(() => {\n    if (term !== '') getFilteredTVShows(term);\n    setCurrentPath('/tvshows');\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"items-container\",\n    children: showTopTVShows ? topTVShows.map(tvShow => {\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"item\",\n        onClick: () => handleModalVisibility(!modalVisible),\n        to: {\n          pathname: '/tvshows/details/' + tvShow.id,\n          state: {\n            tvShow: tvShow\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: 'https://image.tmdb.org/t/p/w500' + tvShow.poster_path,\n            alt: \"Not found...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-title-wrapper\",\n          children: tvShow.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 24\n        }, this)]\n      }, tvShow.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this);\n    }) : filteredTVShows.map(tvShow => {\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"item\",\n        onClick: () => handleModalVisibility(!modalVisible),\n        to: {\n          pathname: '/tvshows/details/' + tvShow.id,\n          state: {\n            tvShow: tvShow\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: 'https://image.tmdb.org/t/p/w500' + tvShow.poster_path,\n            alt: \"Not found...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-title-wrapper\",\n          children: tvShow.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 24\n        }, this)]\n      }, tvShow.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TVShows, \"JH7mKmjIheAIVoGQHLUpPabJmGs=\");\n\n_c = TVShows;\nexport default TVShows;\n\nvar _c;\n\n$RefreshReg$(_c, \"TVShows\");","map":{"version":3,"sources":["C:/Users/Haris/Desktop/showsnmovies/src/components/TVShows.js"],"names":["React","useEffect","useContext","NavLink","TVShowsContext","SearchContext","TVShows","modalVisible","handleModalVisibility","topTVShows","filteredTVShows","showTopTVShows","getFilteredTVShows","term","setCurrentPath","map","tvShow","pathname","id","state","poster_path","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAO,kBAAP;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAA6C;AAAA;;AAC1D,QAAM;AACHC,IAAAA,UADG;AAEHC,IAAAA,eAFG;AAGHC,IAAAA,cAHG;AAIHC,IAAAA;AAJG,MAKFV,UAAU,CAACE,cAAD,CALd;AAMA,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA2BZ,UAAU,CAACG,aAAD,CAA3C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACb,QAAIY,IAAI,KAAK,EAAb,EAAiBD,kBAAkB,CAACC,IAAD,CAAlB;AACjBC,IAAAA,cAAc,CAAC,UAAD,CAAd;AACF,GAHQ,CAAT;AAKA,sBACG;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACIH,cAAc,GACVF,UAAU,CAACM,GAAX,CAAgBC,MAAD,IAAY;AACxB,0BACG,QAAC,OAAD;AAEG,QAAA,SAAS,EAAC,MAFb;AAGG,QAAA,OAAO,EAAE,MAAMR,qBAAqB,CAAC,CAACD,YAAF,CAHvC;AAIG,QAAA,EAAE,EAAE;AACDU,UAAAA,QAAQ,EAAE,sBAAsBD,MAAM,CAACE,EADtC;AAEDC,UAAAA,KAAK,EAAE;AAAEH,YAAAA,MAAM,EAAEA;AAAV;AAFN,SAJP;AAAA,gCASG;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACG;AACG,YAAA,GAAG,EACA,oCACAA,MAAM,CAACI,WAHb;AAKG,YAAA,GAAG,EAAC;AALP;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,gBATH,eAkBG;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBAAqCJ,MAAM,CAACK;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAlBH;AAAA,SACQL,MAAM,CAACE,EADf;AAAA;AAAA;AAAA;AAAA,cADH;AAsBF,KAvBD,CADU,GAyBVR,eAAe,CAACK,GAAhB,CAAqBC,MAAD,IAAY;AAC7B,0BACG,QAAC,OAAD;AAEG,QAAA,SAAS,EAAC,MAFb;AAGG,QAAA,OAAO,EAAE,MAAMR,qBAAqB,CAAC,CAACD,YAAF,CAHvC;AAIG,QAAA,EAAE,EAAE;AACDU,UAAAA,QAAQ,EAAE,sBAAsBD,MAAM,CAACE,EADtC;AAEDC,UAAAA,KAAK,EAAE;AAAEH,YAAAA,MAAM,EAAEA;AAAV;AAFN,SAJP;AAAA,gCASG;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACG;AACG,YAAA,GAAG,EACA,oCACAA,MAAM,CAACI,WAHb;AAKG,YAAA,GAAG,EAAC;AALP;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,gBATH,eAkBG;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBAAqCJ,MAAM,CAACK;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAlBH;AAAA,SACQL,MAAM,CAACE,EADf;AAAA;AAAA;AAAA;AAAA,cADH;AAsBF,KAvBD;AA1BR;AAAA;AAAA;AAAA;AAAA,UADH;AAqDF,CAnED;;GAAMZ,O;;KAAAA,O;AAqEN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { TVShowsContext } from '../contexts/TVShowsContext';\r\nimport { SearchContext } from '../contexts/SearchContext';\r\nimport '../css/items.css';\r\n\r\nconst TVShows = ({ modalVisible, handleModalVisibility }) => {\r\n   const {\r\n      topTVShows,\r\n      filteredTVShows,\r\n      showTopTVShows,\r\n      getFilteredTVShows,\r\n   } = useContext(TVShowsContext);\r\n   const { term, setCurrentPath } = useContext(SearchContext);\r\n\r\n   useEffect(() => {\r\n      if (term !== '') getFilteredTVShows(term);\r\n      setCurrentPath('/tvshows');\r\n   });\r\n\r\n   return (\r\n      <div className='items-container'>\r\n         {showTopTVShows\r\n            ? topTVShows.map((tvShow) => {\r\n                 return (\r\n                    <NavLink\r\n                       key={tvShow.id}\r\n                       className='item'\r\n                       onClick={() => handleModalVisibility(!modalVisible)}\r\n                       to={{\r\n                          pathname: '/tvshows/details/' + tvShow.id,\r\n                          state: { tvShow: tvShow },\r\n                       }}\r\n                    >\r\n                       <div className='image-wrapper'>\r\n                          <img\r\n                             src={\r\n                                'https://image.tmdb.org/t/p/w500' +\r\n                                tvShow.poster_path\r\n                             }\r\n                             alt='Not found...'\r\n                          ></img>\r\n                       </div>\r\n                       <div className='item-title-wrapper'>{tvShow.name}</div>\r\n                    </NavLink>\r\n                 );\r\n              })\r\n            : filteredTVShows.map((tvShow) => {\r\n                 return (\r\n                    <NavLink\r\n                       key={tvShow.id}\r\n                       className='item'\r\n                       onClick={() => handleModalVisibility(!modalVisible)}\r\n                       to={{\r\n                          pathname: '/tvshows/details/' + tvShow.id,\r\n                          state: { tvShow: tvShow },\r\n                       }}\r\n                    >\r\n                       <div className='image-wrapper'>\r\n                          <img\r\n                             src={\r\n                                'https://image.tmdb.org/t/p/w500' +\r\n                                tvShow.poster_path\r\n                             }\r\n                             alt='Not found...'\r\n                          ></img>\r\n                       </div>\r\n                       <div className='item-title-wrapper'>{tvShow.name}</div>\r\n                    </NavLink>\r\n                 );\r\n              })}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default TVShows;\r\n"]},"metadata":{},"sourceType":"module"}