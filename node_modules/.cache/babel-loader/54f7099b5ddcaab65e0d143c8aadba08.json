{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Haris\\\\Desktop\\\\showsnmovies\\\\src\\\\components\\\\TVShowDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport '../css/details.css';\nimport ReactPlayer from 'react-player';\n\nconst TVShowDetails = props => {\n  _s();\n\n  const [id, setId] = useState(null);\n  const {\n    tvShow\n  } = props.location.state;\n  const [currentPath, setCurrentPath] = useState(props.location.pathname);\n  const [prevPath, setPrevPath] = useState('');\n  const [videoUrl, setVideoUrl] = useState(null);\n  useEffect(() => {\n    let id = props.match.params.id;\n    setId(id);\n  }, [id, props.match.params.id]);\n  useEffect(() => {\n    setPrevPath('/' + currentPath.split('/')[1]);\n  }, [currentPath]);\n\n  const getTVShowTrailerUrl = async () => {\n    let response = await fetch('https://api.themoviedb.org/3/tv/' + tvShow.id + '/videos?api_key=041d9cd3501933c52b6696c13f0d60a7', {\n      method: 'GET'\n    });\n    response = await response.json();\n    const videos = response.results;\n\n    if (videos.length >= 1) {\n      setVideoUrl('https://www.youtube.com/watch?v=' + videos[0].key);\n    }\n  };\n\n  useEffect(() => {\n    getTVShowTrailerUrl();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"image-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: 'https://image.tmdb.org/t/p/w500' + tvShow.poster_path,\n        alt: \"Not found...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"title-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: tvShow.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"goback-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"outer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inner\",\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            id: \"goback-link\",\n            onClick: () => props.handleModalVisibility(!props.modalVisible),\n            to: prevPath,\n            children: \"GO BACK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"overview-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"fa fa-star star\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 16\n        }, this), ' ' + tvShow.overview]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }, this), videoUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"video-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        id: \"player\",\n        url: videoUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"video-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"alternative-image\",\n        src: 'https://image.tmdb.org/t/p/w500' + tvShow.backdrop_path,\n        alt: \"Not found...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TVShowDetails, \"hEOV9LWX8QKsXWcFd0COcL8IFXo=\");\n\n_c = TVShowDetails;\nexport default TVShowDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"TVShowDetails\");","map":{"version":3,"sources":["C:/Users/Haris/Desktop/showsnmovies/src/components/TVShowDetails.js"],"names":["React","useEffect","useState","NavLink","ReactPlayer","TVShowDetails","props","id","setId","tvShow","location","state","currentPath","setCurrentPath","pathname","prevPath","setPrevPath","videoUrl","setVideoUrl","match","params","split","getTVShowTrailerUrl","response","fetch","method","json","videos","results","length","key","poster_path","name","handleModalVisibility","modalVisible","overview","backdrop_path"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../css/details.css';\r\nimport ReactPlayer from 'react-player';\r\n\r\nconst TVShowDetails = (props) => {\r\n   const [id, setId] = useState(null);\r\n   const { tvShow } = props.location.state;\r\n   const [currentPath, setCurrentPath] = useState(props.location.pathname);\r\n   const [prevPath, setPrevPath] = useState('');\r\n   const [videoUrl, setVideoUrl] = useState(null);\r\n\r\n   useEffect(() => {\r\n      let id = props.match.params.id;\r\n      setId(id);\r\n   }, [id, props.match.params.id]);\r\n\r\n   useEffect(() => {\r\n      setPrevPath('/' + currentPath.split('/')[1]);\r\n   }, [currentPath]);\r\n\r\n   const getTVShowTrailerUrl = async () => {\r\n      let response = await fetch(\r\n         'https://api.themoviedb.org/3/tv/' +\r\n            tvShow.id +\r\n            '/videos?api_key=041d9cd3501933c52b6696c13f0d60a7',\r\n         {\r\n            method: 'GET',\r\n         }\r\n      );\r\n      response = await response.json();\r\n\r\n      const videos = response.results;\r\n\r\n      if (videos.length >= 1) {\r\n         setVideoUrl('https://www.youtube.com/watch?v=' + videos[0].key);\r\n      }\r\n   };\r\n\r\n   useEffect(() => {\r\n      getTVShowTrailerUrl();\r\n   }, []);\r\n\r\n   return (\r\n      <div id='details-container'>\r\n         <div id='image-wrapper'>\r\n            <img\r\n               src={'https://image.tmdb.org/t/p/w500' + tvShow.poster_path}\r\n               alt='Not found...'\r\n            ></img>\r\n         </div>\r\n\r\n         <div id='title-wrapper'>\r\n            <h4>{tvShow.name}</h4>\r\n         </div>\r\n\r\n         <div id='goback-wrapper'>\r\n            <div class='outer'>\r\n               <div class='inner'>\r\n                  <NavLink\r\n                     id='goback-link'\r\n                     onClick={() =>\r\n                        props.handleModalVisibility(!props.modalVisible)\r\n                     }\r\n                     to={prevPath}\r\n                  >\r\n                     GO BACK\r\n                  </NavLink>\r\n               </div>\r\n            </div>\r\n         </div>\r\n\r\n         <div id='overview-wrapper'>\r\n            <p>\r\n               <span class='fa fa-star star'></span>\r\n               {' ' + tvShow.overview}\r\n            </p>\r\n         </div>\r\n\r\n         {videoUrl ? (\r\n            <div id='video-wrapper'>\r\n               <ReactPlayer id='player' url={videoUrl}></ReactPlayer>\r\n            </div>\r\n         ) : (\r\n            <div id='video-wrapper'>\r\n               <img\r\n                  id='alternative-image'\r\n                  src={'https://image.tmdb.org/t/p/w500' + tvShow.backdrop_path}\r\n                  alt='Not found...'\r\n               ></img>\r\n            </div>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default TVShowDetails;\r\n"]},"metadata":{},"sourceType":"module"}